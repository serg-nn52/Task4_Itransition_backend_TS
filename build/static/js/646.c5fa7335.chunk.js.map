{"version":3,"file":"static/js/646.c5fa7335.chunk.js","mappings":"iRACA,EAA0B,uB,SCgI1B,EA/G4B,WAC1B,IAAMA,GAAWC,EAAAA,EAAAA,KACjB,GAAwBC,EAAAA,EAAAA,UAA2B,IAAnD,eAAOC,EAAP,KAAaC,EAAb,MAKAC,EAAAA,EAAAA,YAJyB,WACvBL,GAASM,EAAAA,EAAAA,SAGiB,CAACN,IAE7B,IAAMO,GAAWC,EAAAA,EAAAA,GAAeC,EAAAA,IA6B1BC,EACS,OAAbH,EACI,GACAA,EAASI,KAAI,SAACC,GACZ,MAAO,CACLC,IAAKD,EAAGE,GACRA,GAAIF,EAAGE,GACPC,KAAMH,EAAGG,KACTC,MAAOJ,EAAGI,MACVC,QAASL,EAAGK,QACZC,UAAWN,EAAGM,UACdC,OAAQP,EAAGO,OAAS,SAAW,UAInCC,EAAe,CACnBC,SAAU,SAACC,EAAiBC,GAC1BnB,EAAQmB,KAINC,EAAerB,EAAKQ,KAAI,SAACC,GAC7B,MAAO,CAAEE,GAAIF,EAAGE,OAGZW,GAAWjB,EAAAA,EAAAA,GAAekB,EAAAA,IAC1BC,GAAUnB,EAAAA,EAAAA,GAAeoB,EAAAA,IAiB/B,OAAKlB,EAAKmB,QAAWF,EAGjBjB,EAAKmB,QAEL,iCACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,IAAD,CAAQC,KAAK,UAAUC,QAfZ,WACjBjC,GAASkC,EAAAA,EAAAA,IAAcV,KAcjB,oBAGA,SAAC,IAAD,CAAQQ,KAAK,UAAUC,QAdR,WACrBjC,GAASmC,EAAAA,EAAAA,IAAkBX,KAarB,sBAGA,SAAC,IAAD,CAAQQ,KAAK,UAAUC,QA5BT,WACpBjC,GAASoC,EAAAA,EAAAA,IAAiBZ,IACtBrB,EAAKkC,QAAO,SAACzB,GAAD,OAAoBA,EAAGG,OAASU,KAAUI,QACxD7B,GAASsC,EAAAA,EAAAA,QAyBL,wBAIF,SAAC,IAAD,CACElB,cAAY,QACVY,KAAM,YACHZ,GAELmB,QA5FQ,CACd,CACEC,MAAO,KACPC,UAAW,MAEb,CACED,MAAO,OACPC,UAAW,QAEb,CACED,MAAO,QACPC,UAAW,SAEb,CACED,MAAO,oBACPC,UAAW,WAEb,CACED,MAAO,kBACPC,UAAW,aAEb,CACED,MAAO,SACPC,UAAW,WAsEPC,WAAYhC,OAIb,MA1BE,0O,UCnGX,EAAsB,mBC6BtB,EAtByB,WACvB,IAAMV,GAAWC,EAAAA,EAAAA,KACXwB,GAAWjB,EAAAA,EAAAA,GAAekB,EAAAA,IAMhC,OACE,SAAC,IAAD,CAASc,MAAK,UAAKf,EAAL,sHAAd,UACE,SAAC,IAAD,CACEO,KAAK,UACLW,MAAM,SACNb,UAAWC,EACXE,QAVa,WACjBjC,GAASsC,EAAAA,EAAAA,QAKP,yBCjBN,EAA0B,uBCsB1B,EAfuB,WACrB,IAAMM,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAE3B,OAAOF,GAAqB,YAAXA,GACf,iBAAKd,UAAWC,EAAhB,WACE,SAAC,EAAD,KACA,uCAEA,SAAC,EAAD,QAGF,SAAC,KAAD,CAAUgB,GAAG","sources":["webpack://task4_ts/./src/components/TableUser/style.module.scss?c97d","components/TableUser/index.tsx","webpack://task4_ts/./src/components/LogOut/style.module.scss?4d0f","components/LogOut/index.tsx","webpack://task4_ts/./src/pages/Main/style.module.scss?7ecd","pages/Main/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttons\":\"style_buttons__WtFat\"};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Table } from 'antd';\r\n\r\nimport {\r\n  fetchRemoveUsers,\r\n  fetchBanUsers,\r\n  fetchGetUserList,\r\n  fetchUnblockUsers,\r\n} from 'store/thunk';\r\n\r\nimport { resetAuth } from 'store/slice';\r\nimport { getUserName } from 'store/selectors';\r\nimport { useAppDispatch } from 'hooks/useAppDispatch';\r\nimport { TUsersType } from 'store/type';\r\nimport { useAppSelector } from 'hooks/useAppSelector';\r\nimport { getLoading, getUsersList } from '../../store/selectors';\r\nimport style from './style.module.scss';\r\n\r\nconst TableUser: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const [chek, setChek] = useState<{ id: string }[]>([]);\r\n  const dispatchUserList = () => {\r\n    dispatch(fetchGetUserList());\r\n  };\r\n\r\n  useEffect(dispatchUserList, [dispatch]);\r\n\r\n  const userList = useAppSelector(getUsersList);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Date Registration',\r\n      dataIndex: 'dateReg',\r\n    },\r\n    {\r\n      title: 'Date last login',\r\n      dataIndex: 'dateLogin',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n    },\r\n  ];\r\n\r\n  const data =\r\n    userList === null\r\n      ? []\r\n      : userList.map((el: TUsersType) => {\r\n          return {\r\n            key: el.id,\r\n            id: el.id,\r\n            name: el.name,\r\n            email: el.email,\r\n            dateReg: el.dateReg,\r\n            dateLogin: el.dateLogin,\r\n            status: el.status ? 'active' : 'ban',\r\n          };\r\n        });\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setChek(selectedRows);\r\n    },\r\n  };\r\n\r\n  const checkedUsers = chek.map((el: TUsersType) => {\r\n    return { id: el.id };\r\n  });\r\n\r\n  const userName = useAppSelector(getUserName);\r\n  const loading = useAppSelector(getLoading);\r\n\r\n  const handlerRemove = () => {\r\n    dispatch(fetchRemoveUsers(checkedUsers));\r\n    if (chek.filter((el: TUsersType) => el.name === userName).length) {\r\n      dispatch(resetAuth());\r\n    }\r\n  };\r\n\r\n  const handlerBan = () => {\r\n    dispatch(fetchBanUsers(checkedUsers));\r\n  };\r\n\r\n  const handlerUnblock = () => {\r\n    dispatch(fetchUnblockUsers(checkedUsers));\r\n  };\r\n\r\n  if (!data.length && !loading) {\r\n    return <h2>Данные не получены, попробуйте позднее!</h2>;\r\n  }\r\n  if (data.length)\r\n    return (\r\n      <>\r\n        <div className={style.buttons}>\r\n          <Button type=\"primary\" onClick={handlerBan}>\r\n            Block\r\n          </Button>\r\n          <Button type=\"primary\" onClick={handlerUnblock}>\r\n            Unblock\r\n          </Button>\r\n          <Button type=\"primary\" onClick={handlerRemove}>\r\n            Delete\r\n          </Button>\r\n        </div>\r\n        <Table\r\n          rowSelection={{\r\n            type: 'checkbox',\r\n            ...rowSelection,\r\n          }}\r\n          columns={columns}\r\n          dataSource={data}\r\n        />\r\n      </>\r\n    );\r\n  return null;\r\n};\r\n\r\nexport default TableUser;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"style_btn__wSVq6\"};","import React from 'react';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { resetAuth } from 'store/slice';\r\nimport { getUserName } from 'store/selectors';\r\nimport { useAppDispatch } from 'hooks/useAppDispatch';\r\nimport { useAppSelector } from 'hooks/useAppSelector';\r\nimport style from './style.module.scss';\r\n\r\nconst LogOut: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const userName = useAppSelector(getUserName);\r\n\r\n  const userLogOut = () => {\r\n    dispatch(resetAuth());\r\n  };\r\n\r\n  return (\r\n    <Tooltip title={`${userName}, Вы точно хотите выйти?`}>\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"circle\"\r\n        className={style.btn}\r\n        onClick={userLogOut}\r\n      >\r\n        Sign Out\r\n      </Button>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default LogOut;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"style_wrapper__iS3I6\"};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getAuth } from 'store/selectors';\r\nimport { Navigate } from 'react-router-dom';\r\nimport TableUser from 'components/TableUser';\r\nimport LogOut from 'components/LogOut';\r\nimport style from './style.module.scss';\r\n\r\nconst Main: React.FC = () => {\r\n  const isAuth = useSelector(getAuth);\r\n\r\n  return isAuth && isAuth !== 'loading' ? (\r\n    <div className={style.wrapper}>\r\n      <LogOut />\r\n      <h1>Main page</h1>\r\n\r\n      <TableUser />\r\n    </div>\r\n  ) : (\r\n    <Navigate to=\"/login\" />\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"names":["dispatch","useAppDispatch","useState","chek","setChek","useEffect","fetchGetUserList","userList","useAppSelector","getUsersList","data","map","el","key","id","name","email","dateReg","dateLogin","status","rowSelection","onChange","selectedRowKeys","selectedRows","checkedUsers","userName","getUserName","loading","getLoading","length","className","style","type","onClick","fetchBanUsers","fetchUnblockUsers","fetchRemoveUsers","filter","resetAuth","columns","title","dataIndex","dataSource","shape","isAuth","useSelector","getAuth","to"],"sourceRoot":""}