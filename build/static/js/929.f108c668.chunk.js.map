{"version":3,"file":"static/js/929.f108c668.chunk.js","mappings":"4LACA,EAAuB,oBAAvB,EAAqD,uB,SC8FrD,EA/EoC,SAACA,GACnC,IACEC,EAMED,EANFC,UACAC,EAKEF,EALFE,YACAC,EAIEH,EAJFG,SACAC,EAGEJ,EAHFI,eACAC,EAEEL,EAFFK,aACAC,EACEN,EADFM,eAEIC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,IAAD,CACEC,UAAWC,EACXC,OAAO,WACPC,KAAK,QACLC,cAAe,CACbC,UAAU,GAEZX,SAAUA,EACVC,eAAgBA,EAChBW,aAAa,MATf,WAWE,wBAAKd,KACL,SAAC,SAAD,CACEe,MAAM,OACNJ,KAAK,OACLK,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BANf,UAUE,SAAC,IAAD,CAAOC,YAAY,8BAGpBd,GACC,SAAC,SAAD,CACEU,MAAM,QACNJ,KAAK,QACLK,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,SAAC,IAAD,CAAOC,YAAY,mBAAmBC,KAAK,YAE3C,MAEJ,SAAC,SAAD,CACEL,MAAM,WACNJ,KAAK,WACLK,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCANf,UAUE,SAAC,aAAD,CAAgBC,YAAY,mCAG9B,SAAC,SAAD,CAAWX,UAAWC,EAAtB,UACE,iBAAKD,UAAWC,EAAhB,WACE,SAAC,IAAD,CAAQW,KAAK,UAAUC,SAAS,SAAhC,SACGhB,EAAiB,WAAa,aAEjC,SAAC,IAAD,CAAQe,KAAK,UAAUE,QAAS,kBAAMhB,EAAS,GAAD,OAAIF,KAAlD,SACGH,c,iIC/Cb,UA7BwB,WACtB,IAAMsB,GAAWC,EAAAA,EAAAA,KAEXC,GAASC,EAAAA,EAAAA,GAAeC,EAAAA,IAU9B,OAAOF,GAAqB,YAAXA,GACf,SAAC,KAAD,CAAUG,GAAG,OAEb,0BACE,SAAC,IAAD,CACE5B,UAAU,gBACVC,YAAY,qBACZC,SAfW,SAAC2B,GAChBN,GAASO,EAAAA,EAAAA,IAAWD,IACpBN,GAASQ,EAAAA,EAAAA,IAAUF,EAAMlB,QAcrBR,eAXiB,WACrB6B,EAAAA,EAAAA,MAAmB,CAAEd,QAAS,oBAW1Bd,aAAa,gBACbC,gBAAgB","sources":["webpack://task4_ts/./src/components/AppForm/style.module.scss?4268","components/AppForm/index.tsx","pages/Login/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"style_form__M-DO-\",\"buttons\":\"style_buttons__L7L28\"};","import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { TUsersType } from 'store/type';\r\nimport style from './style.module.scss';\r\n\r\ninterface IAppForm {\r\n  formTitle: string;\r\n  buttonTitle: string;\r\n  // eslint-disable-next-line no-unused-vars\r\n  onFinish: (value: TUsersType) => void | undefined;\r\n  onFinishFailed?: () => void | undefined;\r\n  pathRedirect: string;\r\n  isRegistration: boolean;\r\n}\r\n\r\nconst AppForm: React.FC<IAppForm> = (props) => {\r\n  const {\r\n    formTitle,\r\n    buttonTitle,\r\n    onFinish,\r\n    onFinishFailed,\r\n    pathRedirect,\r\n    isRegistration,\r\n  } = props;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Form\r\n      className={style.form}\r\n      layout=\"vertical\"\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n    >\r\n      <h2>{formTitle}</h2>\r\n      <Form.Item\r\n        label=\"Name\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your name!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder=\"Please input your name!\" />\r\n      </Form.Item>\r\n\r\n      {isRegistration ? (\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: false,\r\n              message: 'Please input your email!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"ivanov@yandex.by\" type=\"email\" />\r\n        </Form.Item>\r\n      ) : null}\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password placeholder=\"Please input your password!\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item className={style.buttons}>\r\n        <div className={style.buttons}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {isRegistration ? 'Register' : 'Sign In'}\r\n          </Button>\r\n          <Button type=\"primary\" onClick={() => navigate(`${pathRedirect}`)}>\r\n            {buttonTitle}\r\n          </Button>\r\n        </div>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AppForm;\r\n","import React from 'react';\r\nimport { getAuth } from 'store/selectors';\r\nimport { notification } from 'antd';\r\nimport AppForm from 'components/AppForm';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { fetchLogin } from 'store/thunk';\r\nimport { setUserID } from 'store/slice';\r\nimport { useAppDispatch } from 'hooks/useAppDispatch';\r\nimport { useAppSelector } from 'hooks/useAppSelector';\r\nimport { TUsersType } from 'store/type';\r\n\r\nconst Login: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const isAuth = useAppSelector(getAuth);\r\n\r\n  const onFinish = (value: TUsersType) => {\r\n    dispatch(fetchLogin(value));\r\n    dispatch(setUserID(value.name));\r\n  };\r\n\r\n  const onFinishFailed = () => {\r\n    notification.error({ message: 'Error sending!' });\r\n  };\r\n  return isAuth && isAuth !== 'loading' ? (\r\n    <Navigate to=\"/\" />\r\n  ) : (\r\n    <div>\r\n      <AppForm\r\n        formTitle=\"Authorization\"\r\n        buttonTitle=\"Go To Registration\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        pathRedirect=\"/registration\"\r\n        isRegistration={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["props","formTitle","buttonTitle","onFinish","onFinishFailed","pathRedirect","isRegistration","navigate","useNavigate","className","style","layout","name","initialValues","remember","autoComplete","label","rules","required","message","placeholder","type","htmlType","onClick","dispatch","useAppDispatch","isAuth","useAppSelector","getAuth","to","value","fetchLogin","setUserID","notification"],"sourceRoot":""}